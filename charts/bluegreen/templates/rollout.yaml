# This example demonstrates a Rollout using the blue-green update strategy, which contains a manual
# gate before promoting the new stack.
apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: {{ include "bluegreen.name" . }}
  namespace: {{ include "bluegreen.name" . }}
  annotations:
    argocd.argoproj.io/sync-wave: "2"
spec:
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  selector:
    matchLabels:
      app: {{ include "bluegreen.name" . }}
  template:
    metadata:
      labels:
        app: {{ include "bluegreen.name" . }}
    spec:
      containers:
      - name: {{ .Values.containers.name }}
        image: {{ .Values.global.rollout.image }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.containers.containerPort }}
  strategy:
    blueGreen: 
      # activeService specifies the service to update with the new template hash at time of promotion.
      # This field is mandatory for the blueGreen update strategy.
      activeService: {{ include "bluegreen.name" . }}-active
      # previewService specifies the service to update with the new template hash before promotion.
      # This allows the preview stack to be reachable without serving production traffic.
      # This field is optional.
      previewService: {{ include "bluegreen.name" . }}-preview
      # autoPromotionEnabled disables automated promotion of the new stack by pausing the rollout
      # immediately before the promotion. If omitted, the default behavior is to promote the new
      # stack as soon as the ReplicaSet are completely ready/available.
      # Rollouts can be resumed using: `kubectl argo rollouts promote ROLLOUT`
      autoPromotionEnabled: {{ .Values.strategy.blueGreen.autoPromotionEnabled }}

