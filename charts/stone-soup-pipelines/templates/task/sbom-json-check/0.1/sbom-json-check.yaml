---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: sbom-json-check
spec:
  description: >-
    Verifies the integrity and security of the Software Bill of Materials (SBOM) file in JSON format using CyloneDX tool.
  params:
    - name: IMAGE_URL
      description: Fully qualified image name to verify.
      type: string
    - name: IMAGE_DIGEST
      description: Image digest.
      type: string
  results:
    - description: Tekton task test output.
      name: HACBS_TEST_OUTPUT
  steps:
  - name: sbom-json-check
    image: quay.io/redhat-appstudio/hacbs-test:v1.0.12@sha256:8c833349cad40d34262548295cd4eb1bd330e42fbb221ef54e6caee15ae1d208
    securityContext:
      runAsUser: 0
      capabilities:
        add:
          - SETFCAP
    volumeMounts:
      - mountPath: /shared
        name: shared
    env:
      - name: IMAGE_URL
        value: $(params.IMAGE_URL)
      - name: IMAGE_DIGEST
        value: $(params.IMAGE_DIGEST)
    script: |
      #!/usr/bin/env bash
      source /utils.sh

      mkdir /manifests/ && cd /manifests/

      image_with_digest="${IMAGE_URL}@${IMAGE_DIGEST}"

      if ! oc image extract "${image_with_digest}" --path '/root/buildinfo/content_manifests/*:/manifests/'; then
        echo "Failed to extract manifests from image ${image_with_digest}."
        note="Task $(context.task.name) failed: Failed to extract manifests from image ${image_with_digest} with oc extract. For details, check Tekton task log."
        HACBS_ERROR_OUTPUT=$(make_result_json -r "ERROR" -t "$note")
      fi

      touch fail_result.txt
      if [ -f "sbom-cyclonedx.json" ]
      then
        result=$(echo -n $(cyclonedx-linux-x64 validate --input-file sbom-cyclonedx.json))
        if [[ ! $result =~ "BOM validated successfully" ]]
        then
          echo "sbom-cyclonedx.json: $result" > fail_result.txt
        fi
      else
        echo "Cannot access sbom-cyclonedx.json: No such file or directory exists." > fail_result.txt
      fi

      FAIL_RESULTS="$(cat fail_result.txt)"
      if [[ -z $FAIL_RESULTS ]]
      then
        note="Task $(context.task.name) completed: Check result for JSON check result."
        HACBS_TEST_OUTPUT=$(make_result_json -r "SUCCESS" -s 1 -t "$note")
      else
        echo "Failed to verify sbom-cyclonedx.json for image $IMAGE_URL with reason: $FAIL_RESULTS."
        note="Task $(context.task.name) failed: Failed to verify SBOM for image $IMAGE_URL."
        HACBS_ERROR_OUTPUT=$(make_result_json -r "FAILURE" -f 1 -t "$note")
      fi

      echo "${HACBS_TEST_OUTPUT:-${HACBS_ERROR_OUTPUT}}" | tee $(results.HACBS_TEST_OUTPUT.path)
  volumes:
  - name: shared
    emptyDir: {}
